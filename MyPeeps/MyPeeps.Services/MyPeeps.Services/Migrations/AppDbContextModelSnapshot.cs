// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPeeps.Services.DataAccess;

namespace MyPeeps.Services.Migrations
{
    [DbContext(typeof(MyPeepsDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyPeeps.Services.DataAccess.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneBookId")
                        .HasColumnType("int");

                    b.HasKey("ContactId");

                    b.HasIndex("PhoneBookId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactId = 1,
                            Name = "Contact1",
                            Number = "1111111111",
                            PhoneBookId = 1
                        },
                        new
                        {
                            ContactId = 2,
                            Name = "Contact2",
                            Number = "2222222222",
                            PhoneBookId = 1
                        },
                        new
                        {
                            ContactId = 3,
                            Name = "Contact3",
                            Number = "3333333333",
                            PhoneBookId = 1
                        },
                        new
                        {
                            ContactId = 4,
                            Name = "Contact4",
                            Number = "4444444444",
                            PhoneBookId = 2
                        },
                        new
                        {
                            ContactId = 5,
                            Name = "Contact5",
                            Number = "5555555555",
                            PhoneBookId = 2
                        },
                        new
                        {
                            ContactId = 6,
                            Name = "Contact6",
                            Number = "6666666666",
                            PhoneBookId = 2
                        },
                        new
                        {
                            ContactId = 7,
                            Name = "Contact7",
                            Number = "7777777777",
                            PhoneBookId = 3
                        },
                        new
                        {
                            ContactId = 8,
                            Name = "Contact8",
                            Number = "8888888888",
                            PhoneBookId = 3
                        },
                        new
                        {
                            ContactId = 9,
                            Name = "Contact9",
                            Number = "9999999999",
                            PhoneBookId = 3
                        },
                        new
                        {
                            ContactId = 10,
                            Name = "Contact10",
                            Number = "10101010",
                            PhoneBookId = 4
                        },
                        new
                        {
                            ContactId = 11,
                            Name = "Contact11",
                            Number = "111111111",
                            PhoneBookId = 4
                        },
                        new
                        {
                            ContactId = 12,
                            Name = "Contact12",
                            Number = "121212121",
                            PhoneBookId = 4
                        },
                        new
                        {
                            ContactId = 13,
                            Name = "Contact13",
                            Number = "131313131",
                            PhoneBookId = 5
                        },
                        new
                        {
                            ContactId = 14,
                            Name = "Contact14",
                            Number = "141414141",
                            PhoneBookId = 5
                        },
                        new
                        {
                            ContactId = 15,
                            Name = "Contact15",
                            Number = "151515151",
                            PhoneBookId = 5
                        });
                });

            modelBuilder.Entity("MyPeeps.Services.DataAccess.PhoneBook", b =>
                {
                    b.Property<int>("PhoneBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhoneBookId");

                    b.ToTable("PhoneBooks");

                    b.HasData(
                        new
                        {
                            PhoneBookId = 1,
                            Name = "PhoneBook1"
                        },
                        new
                        {
                            PhoneBookId = 2,
                            Name = "PhoneBook2"
                        },
                        new
                        {
                            PhoneBookId = 3,
                            Name = "PhoneBook3"
                        },
                        new
                        {
                            PhoneBookId = 4,
                            Name = "PhoneBook4"
                        },
                        new
                        {
                            PhoneBookId = 5,
                            Name = "PhoneBook5"
                        });
                });

            modelBuilder.Entity("MyPeeps.Services.DataAccess.Contact", b =>
                {
                    b.HasOne("MyPeeps.Services.DataAccess.PhoneBook", null)
                        .WithMany("Contacts")
                        .HasForeignKey("PhoneBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
